name: Release Build

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  # 1. 创建 Release
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4

      - name: Create GitHub Release
        id: create
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 2. 多平台构建（仅 Windows 和 macOS）
  build:
    needs: create-release
    strategy:
      matrix:
        include:
          # macOS
          - os: macos-latest
            target: x86_64-apple-darwin
            arch: x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            arch: aarch64
          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            arch: x86_64
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            arch: arm64
          # Windows WebView2 内置版
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            arch: x86_64
            webview2: true
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            arch: arm64
            webview2: true
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Setup Windows WebView2
        if: ${{ matrix.webview2 == true && runner.os == 'Windows' }}
        run: |
          powershell -Command "
          $arch = '${{ matrix.arch }}';
          $url = \"https://github.com/westinyang/WebView2RuntimeArchive/releases/download/109.0.1518.78/Microsoft.WebView2.FixedVersionRuntime.109.0.1518.78.$arch.cab\";
          Invoke-WebRequest -Uri $url -OutFile Microsoft.WebView2.FixedVersionRuntime.109.0.1518.78.$arch.cab;
          Expand .\Microsoft.WebView2.FixedVersionRuntime.109.0.1518.78.$arch.cab -F:* ./src-tauri;
          Remove-Item .\src-tauri\tauri.windows.conf.json;
          Rename-Item .\src-tauri\webview2.$arch.json tauri.windows.conf.json;
          "
      - name: Build Tauri app
        run: pnpm tauri build
      - name: Find artifact
        id: artifact
        run: |
          FILE=$(find src-tauri/target/release/bundle -type f \( -name "*.exe" -o -name "*.dmg" \) | head -n 1)
          echo "file=$FILE" >> $GITHUB_OUTPUT
          echo "ext=${FILE##*.}" >> $GITHUB_OUTPUT
      - name: Upload artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ steps.artifact.outputs.file }}
          asset_name: ${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}.${{ steps.artifact.outputs.ext }}
          asset_content_type: application/octet-stream

  # 3. 生成 release.txt 并上传
  generate-release-file:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate release.txt
        run: |
          VERSION=${{ github.ref_name }}
          DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/download/$VERSION"
          cat > release.txt <<EOF
          Release $VERSION
          ==================

          Download Links:

          ### Windows
          - [x86_64]($DOWNLOAD_URL/$VERSION-windows-latest-x86_64.exe)
          - [ARM64]($DOWNLOAD_URL/$VERSION-windows-latest-arm64.exe)
          - [x86_64 WebView2]($DOWNLOAD_URL/$VERSION-windows-latest-x86_64.exe)
          - [ARM64 WebView2]($DOWNLOAD_URL/$VERSION-windows-latest-arm64.exe)

          ### macOS
          - [x86_64]($DOWNLOAD_URL/$VERSION-macos-latest-x86_64.dmg)
          - [aarch64]($DOWNLOAD_URL/$VERSION-macos-latest-aarch64.dmg)
          EOF
      - name: Upload release.txt
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: release.txt
          asset_name: release.txt
          asset_content_type: text/plain

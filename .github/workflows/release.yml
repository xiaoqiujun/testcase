name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    strategy:
      matrix:
        platform: [macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      # 1️⃣ Checkout 代码
      - uses: actions/checkout@v4

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true

      # 3️⃣ 安装依赖
      - run: npm install

      # 4️⃣ 安装 Rust
      - uses: dtolnay/rust-toolchain@stable

      # 5️⃣ 安装 Tauri CLI
      - run: npm install -g @tauri-apps/cli

      # 6️⃣ 构建前端
      - run: npm run build

      # 7️⃣ 构建 Tauri 应用
      - run: npm run tauri build

      # 8️⃣ 签名
      - name: Sign artifacts
        run: |
          echo "Signing build artifacts..."
          for file in $(find src-tauri/target/release/bundle -type f \( -name "*.msi" -o -name "*.dmg" \)); do
            echo "Signing $file"
            npm run tauri signer sign \
              --private-key "$TAURI_PRIVATE_KEY" \
              --password "$TAURI_KEY_PASSWORD" \
              "$file"
          done
        shell: bash
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      # 9️⃣ 上传 Release 文件
      - name: Upload artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: src-tauri/target/release/bundle/**/*.{msi,dmg}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-latest-json:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Download Release Assets
        uses: robinraju/release-downloader@v1.9
        with:
          repository: ${{ github.repository }}
          tag: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fileName: "*"

      - name: Create latest.json
        run: |
          VERSION=${GITHUB_REF##*/}
          PUB_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          SIG_MAC=$(cat testcase_${VERSION}_x64.dmg.sig | base64 -w 0)
          SIG_MAC_ARM=$(cat testcase_${VERSION}_aarch64.dmg.sig | base64 -w 0)
          SIG_WIN=$(cat testcase_${VERSION}_x64_en-US.msi.sig | base64 -w 0)

          cat > latest.json <<EOF
          {
            "version": "${VERSION}",
            "notes": "Release ${VERSION}",
            "pub_date": "${PUB_DATE}",
            "platforms": {
              "darwin-x86_64": {
                "signature": "${SIG_MAC}",
                "url": "https://github.com/${{ github.repository }}/releases/download/${VERSION}/testcase_${VERSION}_x64.dmg"
              },
              "darwin-aarch64": {
                "signature": "${SIG_MAC_ARM}",
                "url": "https://github.com/${{ github.repository }}/releases/download/${VERSION}/testcase_${VERSION}_aarch64.dmg"
              },
              "windows-x86_64": {
                "signature": "${SIG_WIN}",
                "url": "https://github.com/${{ github.repository }}/releases/download/${VERSION}/testcase_${VERSION}_x64_en-US.msi"
              }
            }
          }
          EOF

      - name: Upload latest.json
        uses: softprops/action-gh-release@v2
        with:
          files: latest.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

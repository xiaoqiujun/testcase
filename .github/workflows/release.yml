name: Release Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g. 1.2.3)"
        required: true
      changelog:
        description: "Changelog notes"
        required: true

jobs:
  # 1. 创建 GitHub Release
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create GitHub Release
        id: create
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: "v${{ github.event.inputs.version }}"
          body: ${{ github.event.inputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 2. 多平台构建
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            arch: x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            arch: x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            arch: aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            arch: x86_64
    runs-on: ${{ matrix.os }}
    needs: create-release

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Tauri app
        run: pnpm tauri build

      - name: Find artifact
        id: artifact
        run: |
          FILE=$(find src-tauri/target/release/bundle -type f \( -name "*.exe" -o -name "*.dmg" -o -name "*.AppImage" -o -name "*.deb" -o -name "*.msi" \) | head -n 1)
          echo "file=$FILE" >> $GITHUB_OUTPUT
          echo "ext=${FILE##*.}" >> $GITHUB_OUTPUT

      - name: Upload artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ steps.artifact.outputs.file }}
          asset_name: ${{ github.event.inputs.version }}-${{ matrix.os }}-${{ matrix.arch }}.${{ steps.artifact.outputs.ext }}
          asset_content_type: application/octet-stream
